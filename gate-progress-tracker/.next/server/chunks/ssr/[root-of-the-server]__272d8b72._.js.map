{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///C:/Study/Programming/Github%20Stuff/GATE-progress-tracker/gate-progress-tracker/app/data/syllabus.ts"],"sourcesContent":["// Comprehensive syllabus for all 30 GATE 2026 papers\r\nexport const syllabus: Record<string, string[]> = {\r\n  AE: [\r\n    \"Flight Mechanics: Atmosphere, Airplane Performance\",\r\n    \"Aerodynamics: Airfoils, Lift, Drag\",\r\n    \"Structures: Stress-Strain, Flight Vehicle Structures\",\r\n    \"Propulsion: Gas Turbines, Rocket Propulsion\",\r\n    \"Space Dynamics: Orbital Mechanics\",\r\n    \"Engineering Mathematics: Linear Algebra, Calculus, Differential Equations\"\r\n  ],\r\n  AG: [\r\n    \"Farm Machinery: Design, Operation\",\r\n    \"Soil and Water Conservation: Irrigation, Drainage\",\r\n    \"Agricultural Processing: Drying, Milling\",\r\n    \"Farm Power: Engines, Tractors\",\r\n    \"Engineering Mathematics: Linear Algebra, Calculus\"\r\n  ],\r\n  AR: [\r\n    \"Architecture: History, Design\",\r\n    \"Planning: Urban, Regional\",\r\n    \"Building Materials and Construction\",\r\n    \"Environmental Planning: Sustainability\",\r\n    \"Infrastructure: Transport, Water Supply\"\r\n  ],\r\n  BM: [\r\n    \"Human Anatomy and Physiology\",\r\n    \"Biomedical Instrumentation: Sensors, Amplifiers\",\r\n    \"Biomechanics: Kinematics, Kinetics\",\r\n    \"Medical Imaging: X-Ray, MRI\",\r\n    \"Biomaterials\",\r\n    \"Engineering Mathematics: Linear Algebra, Probability\"\r\n  ],\r\n  BT: [\r\n    \"Biochemistry: Enzymes, Metabolism\",\r\n    \"Microbiology: Microbial Genetics\",\r\n    \"Molecular Biology: DNA, RNA\",\r\n    \"Bioprocess Engineering: Fermentation\",\r\n    \"Immunology\",\r\n    \"Engineering Mathematics: Calculus, Numerical Methods\"\r\n  ],\r\n  CE: [\r\n    \"Structural Engineering: Beams, Columns\",\r\n    \"Geotechnical Engineering: Soil Mechanics\",\r\n    \"Water Resources: Hydrology, Irrigation\",\r\n    \"Transportation Engineering: Highways, Traffic\",\r\n    \"Environmental Engineering: Water Treatment\",\r\n    \"Engineering Mathematics: Linear Algebra, Calculus\"\r\n  ],\r\n  CH: [\r\n    \"Chemical Reaction Engineering: Kinetics, Reactors\",\r\n    \"Process Calculations: Material Balance\",\r\n    \"Fluid Mechanics: Flow, Pumps\",\r\n    \"Heat Transfer: Conduction, Convection\",\r\n    \"Mass Transfer: Distillation, Absorption\",\r\n    \"Engineering Mathematics: Differential Equations\"\r\n  ],\r\n  CS: [\r\n    \"Algorithms: Sorting, Graph Algorithms\",\r\n    \"Data Structures: Arrays, Trees\",\r\n    \"Operating Systems: Processes, Memory Management\",\r\n    \"Databases: SQL, Normalization\",\r\n    \"Computer Networks: OSI, TCP/IP\",\r\n    \"Engineering Mathematics: Discrete Math, Probability\"\r\n  ],\r\n  CY: [\r\n    \"Physical Chemistry: Thermodynamics, Kinetics\",\r\n    \"Inorganic Chemistry: Coordination Compounds\",\r\n    \"Organic Chemistry: Reaction Mechanisms\",\r\n    \"Analytical Chemistry: Spectroscopy\",\r\n    \"Quantum Chemistry\"\r\n  ],\r\n  DA: [\r\n    \"Probability and Statistics: Distributions, Hypothesis Testing\",\r\n    \"Linear Algebra: Matrices, Eigenvalues\",\r\n    \"Calculus: Optimization, Partial Derivatives\",\r\n    \"Programming: Python, Data Structures\",\r\n    \"Machine Learning: Regression, Classification\",\r\n    \"Data Visualization: Plots, Charts\"\r\n  ],\r\n  EC: [\r\n    \"Engineering Mathematics: Linear Algebra, Calculus, Probability\",\r\n    \"Networks: KCL, KVL, Thevenin\",\r\n    \"Signals and Systems: Fourier, Laplace, Z-Transform\",\r\n    \"Electronic Devices: Semiconductors, Diodes\",\r\n    \"Analog Circuits: Amplifiers, Oscillators\",\r\n    \"Digital Circuits: Logic Gates, Microprocessors\",\r\n    \"Control Systems: Stability, Bode Plots\",\r\n    \"Communications: AM, FM, Digital Modulation\",\r\n    \"Electromagnetics: Maxwell's Equations, Antennas\"\r\n  ],\r\n  EE: [\r\n    \"Electric Circuits: KCL, KVL, AC Analysis\",\r\n    \"Electromagnetic Fields: Maxwell's Equations\",\r\n    \"Signals and Systems: Fourier, Laplace\",\r\n    \"Electrical Machines: Transformers, Motors\",\r\n    \"Power Systems: Load Flow, Fault Analysis\",\r\n    \"Engineering Mathematics: Linear Algebra, Probability\"\r\n  ],\r\n  ES: [\r\n    \"Environmental Chemistry: Pollutants\",\r\n    \"Water and Wastewater Treatment\",\r\n    \"Air Pollution: Control Technologies\",\r\n    \"Solid Waste Management\",\r\n    \"Environmental Laws\",\r\n    \"Mathematics: Linear Algebra, Statistics\"\r\n  ],\r\n  EY: [\r\n    \"Ecology: Ecosystems, Biodiversity\",\r\n    \"Evolution: Natural Selection, Genetics\",\r\n    \"Behavioral Ecology\",\r\n    \"Conservation Biology\",\r\n    \"Quantitative Ecology: Statistics\"\r\n  ],\r\n  GE: [\r\n    \"Surveying: Levelling, Triangulation\",\r\n    \"Remote Sensing: GIS, GPS\",\r\n    \"Photogrammetry\",\r\n    \"Geodesy\",\r\n    \"Mathematics: Numerical Methods\"\r\n  ],\r\n  GG: [\r\n    \"Geology: Mineralogy, Petrology\",\r\n    \"Geophysics: Seismic, Gravity\",\r\n    \"Structural Geology\",\r\n    \"Hydrogeology\",\r\n    \"Mathematics: Statistics\"\r\n  ],\r\n  IN: [\r\n    \"Electrical Circuits: Network Analysis\",\r\n    \"Analog Electronics: Amplifiers\",\r\n    \"Digital Electronics: Microcontrollers\",\r\n    \"Signals and Systems: Transforms\",\r\n    \"Sensors and Transducers\",\r\n    \"Engineering Mathematics: Linear Algebra, Calculus\"\r\n  ],\r\n  MA: [\r\n    \"Linear Algebra: Vector Spaces, Eigenvalues\",\r\n    \"Calculus: Multivariable, Series\",\r\n    \"Differential Equations: ODE, PDE\",\r\n    \"Complex Analysis\",\r\n    \"Probability and Statistics\",\r\n    \"Numerical Analysis\"\r\n  ],\r\n  ME: [\r\n    \"Mechanics: Statics, Dynamics\",\r\n    \"Thermodynamics: Laws, Cycles\",\r\n    \"Fluid Mechanics: Flow, Bernoulli\",\r\n    \"Heat Transfer: Conduction, Convection\",\r\n    \"Manufacturing: Machining, Welding\",\r\n    \"Engineering Mathematics: Linear Algebra, Calculus\"\r\n  ],\r\n  MN: [\r\n    \"Mine Development: Drilling, Blasting\",\r\n    \"Mine Ventilation\",\r\n    \"Mine Safety\",\r\n    \"Rock Mechanics\",\r\n    \"Mineral Economics\",\r\n    \"Mathematics: Numerical Methods\"\r\n  ],\r\n  MT: [\r\n    \"Physical Metallurgy: Phase Diagrams\",\r\n    \"Mechanical Metallurgy: Stress-Strain\",\r\n    \"Extractive Metallurgy: Pyrometallurgy\",\r\n    \"Materials Characterization\",\r\n    \"Corrosion\",\r\n    \"Mathematics: Differential Equations\"\r\n  ],\r\n  NM: [\r\n    \"Ship Design: Stability, Hydrodynamics\",\r\n    \"Marine Structures: Strength\",\r\n    \"Marine Propulsion\",\r\n    \"Ocean Engineering\",\r\n    \"Mathematics: Calculus, Numerical Methods\"\r\n  ],\r\n  PE: [\r\n    \"Petroleum Formation: Geology\",\r\n    \"Drilling Technology\",\r\n    \"Reservoir Engineering\",\r\n    \"Production Operations\",\r\n    \"Refining Processes\",\r\n    \"Mathematics: Differential Equations\"\r\n  ],\r\n  PH: [\r\n    \"Classical Mechanics: Lagrangian, Hamiltonian\",\r\n    \"Quantum Mechanics: Wave Functions\",\r\n    \"Electromagnetism: Maxwell's Equations\",\r\n    \"Thermodynamics: Statistical Mechanics\",\r\n    \"Solid State Physics\",\r\n    \"Mathematical Physics\"\r\n  ],\r\n  PI: [\r\n    \"Manufacturing Processes: Casting, Forming\",\r\n    \"Industrial Engineering: Optimization\",\r\n    \"Metrology: Measurement Systems\",\r\n    \"Production Planning: Scheduling\",\r\n    \"Quality Control\",\r\n    \"Engineering Mathematics: Linear Algebra\"\r\n  ],\r\n  ST: [\r\n    \"Probability: Distributions, Expectation\",\r\n    \"Statistical Inference: Hypothesis Testing\",\r\n    \"Regression Analysis\",\r\n    \"Multivariate Analysis\",\r\n    \"Stochastic Processes\"\r\n  ],\r\n  TF: [\r\n    \"Textile Fibres: Natural, Synthetic\",\r\n    \"Yarn Manufacture: Spinning\",\r\n    \"Fabric Manufacture: Weaving, Knitting\",\r\n    \"Textile Testing\",\r\n    \"Chemical Processing\",\r\n    \"Mathematics: Statistics\"\r\n  ],\r\n  XE: [\r\n    \"Engineering Mathematics: Linear Algebra, Calculus\",\r\n    \"Fluid Mechanics: Flow, Viscosity\",\r\n    \"Materials Science: Properties, Composites\",\r\n    \"Thermodynamics: Laws, Cycles\",\r\n    \"Solid Mechanics: Stress, Strain\",\r\n    \"Polymer Science: Synthesis\",\r\n    \"Food Technology\",\r\n    \"Energy Science: Renewable Energy\"\r\n  ],\r\n  XH: [\r\n    \"Reasoning and Comprehension\",\r\n    \"Economics: Micro, Macro\",\r\n    \"English: Literature, Criticism\",\r\n    \"Linguistics: Phonetics, Syntax\",\r\n    \"Philosophy: Ethics, Logic\",\r\n    \"Psychology: Cognitive, Social\",\r\n    \"Sociology: Social Theory\"\r\n  ],\r\n  XL: [\r\n    \"Chemistry: Organic, Inorganic\",\r\n    \"Biochemistry: Enzymes, Metabolism\",\r\n    \"Botany: Plant Physiology\",\r\n    \"Microbiology: Microbial Genetics\",\r\n    \"Zoology: Animal Physiology\",\r\n    \"Food Technology\"\r\n  ],\r\n  GA: [\r\n    \"Quantitative Aptitude: Ratios, Percentages\",\r\n    \"Data Interpretation: Tables, Graphs\",\r\n    \"Logical Reasoning: Puzzles, Syllogisms\",\r\n    \"Verbal Ability: Reading Comprehension\",\r\n    \"Vocabulary: Synonyms, Antonyms\"\r\n  ]\r\n};\r\n\r\n// Allowed two-paper combinations\r\nexport const allowedCombinations: Record<string, string[]> = {\r\n  AE: ['CE', 'ME', 'XE'],\r\n  AG: ['CE'],\r\n  AR: ['CE', 'GE'],\r\n  BM: ['BT', 'IN'],\r\n  BT: ['BM', 'XL'],\r\n  CE: ['AE', 'AG', 'AR', 'ES', 'GE', 'NM', 'XE'],\r\n  CH: ['ES', 'PE', 'XE'],\r\n  CS: ['DA', 'EC', 'GE', 'MA', 'PH', 'ST'],\r\n  CY: ['XE', 'XL'],\r\n  DA: ['CS', 'EC', 'EE', 'MA', 'ME', 'PH', 'ST', 'XE'],\r\n  EC: ['CS', 'DA', 'EE', 'IN', 'PH'],\r\n  EE: ['DA', 'EC', 'IN', 'PH'],\r\n  ES: ['CE', 'CH', 'GE'],\r\n  EY: ['XL'],\r\n  GE: ['AR', 'CE', 'CS', 'ES', 'GG'],\r\n  GG: ['GE'],\r\n  IN: ['BM', 'EC', 'EE', 'ME'],\r\n  MA: ['CS', 'DA', 'PH', 'ST'],\r\n  ME: ['AE', 'DA', 'IN', 'NM', 'PI', 'XE'],\r\n  MN: [],\r\n  MT: ['XE'],\r\n  NM: ['CE', 'ME'],\r\n  PE: ['CH'],\r\n  PH: ['CS', 'DA', 'EC', 'EE', 'MA', 'XE'],\r\n  PI: ['ME', 'XE'],\r\n  ST: ['CS', 'DA', 'MA', 'XH'],\r\n  TF: [],\r\n  XE: ['AE', 'CE', 'CH', 'CY', 'DA', 'ME', 'MT', 'PH', 'PI'],\r\n  XH: ['ST'],\r\n  XL: ['BT', 'CY', 'EY']\r\n};\r\n\r\n// Common topics across papers\r\nexport const commonTopics = [\r\n  \"Linear Algebra: Matrices, Determinants, Eigenvalues\",\r\n  \"Calculus: Limits, Continuity, Differentiation, Integration\",\r\n  \"Probability and Statistics: Mean, Variance, Probability Distributions\",\r\n  \"Numerical Methods: Solutions of Equations, Interpolation\",\r\n  \"Vector Analysis: Gradient, Divergence, Curl\",\r\n  \"Differential Equations: First Order, Higher Order\"\r\n];\r\n\r\nexport type TopicStatus = {\r\n  topic: string;\r\n  status: 'Not Started' | 'In Progress' | 'Completed';\r\n  difficulty: 'Easy' | 'Moderate' | 'Hard';\r\n  notes: string;\r\n};\r\n\r\nexport type Task = {\r\n  id: number;\r\n  date: string;\r\n  subject: string;\r\n  topic: string;\r\n  status: 'Not Started' | 'In Progress' | 'Completed';\r\n  notes: string;\r\n};\r\n\r\nexport type TopicStatuses = Record<string, TopicStatus[]>;"],"names":[],"mappings":"AAAA,qDAAqD;;;;;;;;;AAC9C,MAAM,WAAqC;IAChsBAAgD;IAC3D,IAAI;QAAC;QAAM;QAAM;KAAK;IACtB,IAAI;QAAC;KAAK;IACV,IAAI;QAAC;QAAM;KAAK;IAChB,IAAI;QAAC;QAAM;KAAK;IAChB,IAAI;QAAC;QAAM;KAAK;IAChB,IAAI;QAAC;QAAM;QAAM;QAAM;QAAM;QAAM;QAAM;KAAK;IAC9C,IAAI;QAAC;QAAM;QAAM;KAAK;IACtB,IAAI;QAAC;QAAM;QAAM;QAAM;QAAM;QAAM;KAAK;IACxC,IAAI;QAAC;QAAM;KAAK;IAChB,IAAI;QAAC;QAAM;QAAM;QAAM;QAAM;QAAM;QAAM;QAAM;KAAK;IACpD,IAAI;QAAC;QAAM;QAAM;QAAM;QAAM;KAAK;IAClC,IAAI;QAAC;QAAM;QAAM;QAAM;KAAK;IAC5B,IAAI;QAAC;QAAM;QAAM;KAAK;IACtB,IAAI;QAAC;KAAK;IACV,IAAI;QAAC;QAAM;QAAM;QAAM;QAAM;KAAK;IAClC,IAAI;QAAC;KAAK;IACV,IAAI;QAAC;QAAM;QAAM;QAAM;KAAK;IAC5B,IAAI;QAAC;QAAM;QAAM;QAAM;KAAK;IAC5B,IAAI;QAAC;QAAM;QAAM;QAAM;QAAM;QAAM;KAAK;IACxC,IAAI,EAAE;IACN,IAAI;QAAC;KAAK;IACV,IAAI;QAAC;QAAM;KAAK;IAChB,IAAI;QAAC;KAAK;IACV,IAAI;QAAC;QAAM;QAAM;QAAM;QAAM;QAAM;KAAK;IACxC,IAAI;QAAC;QAAM;KAAK;IAChB,IAAI;QAAC;QAAM;QAAM;QAAM;KAAK;IAC5B,IAAI,EAAE;IACN,IAAI;QAAC;QAAM;QAAM;QAAM;QAAM;QAAM;QAAM;QAAM;QAAM;KAAK;IAC1D,IAAI;QAAC;KAAK;IACV,IAAI;QAAC;QAAM;QAAM;KAAK;AACxB;AAGO,MAAM,eAAe;IAC1B;IACA;IACA;IACA;IACA;IACA;CACD","debugId":null}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":["file:///C:/Study/Programming/Github%20Stuff/GATE-progress-tracker/gate-progress-tracker/app/components/PaperSelectionModal.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState } from 'react';\r\nimport { syllabus, allowedCombinations } from '../data/syllabus';\r\n\r\ninterface PaperSelectionModalProps {\r\n  isOpen: boolean;\r\n  onSave: (papers: string[]) => void;\r\n}\r\n\r\nexport default function PaperSelectionModal({ isOpen, onSave }: PaperSelectionModalProps) {\r\n  const [numPapers, setNumPapers] = useState<'1' | '2'>('1');\r\n  const [paper1, setPaper1] = useState('');\r\n  const [paper2, setPaper2] = useState('');\r\n\r\n  const papers = Object.keys(syllabus).filter(p => p !== 'GA');\r\n\r\n  const handleSave = () => {\r\n    if (!paper1 || (numPapers === '2' && !paper2)) {\r\n      alert('Please select all required papers.');\r\n      return;\r\n    }\r\n\r\n    if (numPapers === '2' && !allowedCombinations[paper1]?.includes(paper2)) {\r\n      alert('Invalid paper combination. Please select an allowed secondary paper.');\r\n      return;\r\n    }\r\n\r\n    const selectedPapers = numPapers === '1' ? [paper1, 'GA'] : [paper1, paper2, 'GA'];\r\n    onSave(selectedPapers);\r\n  };\r\n\r\n  const getSecondaryPaperOptions = () => {\r\n    return allowedCombinations[paper1] || [];\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50\">\r\n      <div className=\"bg-white dark:bg-gray-700 p-6 rounded-lg w-full max-w-md mx-4\">\r\n        <h2 className=\"text-xl font-semibold mb-4 dark:text-white\">Select GATE 2026 Papers</h2>\r\n        \r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            Number of Papers\r\n          </label>\r\n          <select\r\n            value={numPapers}\r\n            onChange={(e) => {\r\n              setNumPapers(e.target.value as '1' | '2');\r\n              setPaper2('');\r\n            }}\r\n            className=\"w-full p-2 border rounded-md dark:bg-gray-600 dark:border-gray-500 dark:text-white\"\r\n          >\r\n            <option value=\"1\">1 Paper</option>\r\n            <option value=\"2\">2 Papers</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            Primary Paper\r\n          </label>\r\n          <select\r\n            value={paper1}\r\n            onChange={(e) => {\r\n              setPaper1(e.target.value);\r\n              setPaper2('');\r\n            }}\r\n            className=\"w-full p-2 border rounded-md dark:bg-gray-600 dark:border-gray-500 dark:text-white\"\r\n          >\r\n            <option value=\"\">Select Primary Paper</option>\r\n            {papers.map(paper => (\r\n              <option key={paper} value={paper}>{paper}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {numPapers === '2' && (\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              Secondary Paper\r\n            </label>\r\n            <select\r\n              value={paper2}\r\n              onChange={(e) => setPaper2(e.target.value)}\r\n              className=\"w-full p-2 border rounded-md dark:bg-gray-600 dark:border-gray-500 dark:text-white\"\r\n            >\r\n              <option value=\"\">Select Secondary Paper</option>\r\n              {getSecondaryPaperOptions().map(paper => (\r\n                <option key={paper} value={paper}>{paper}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        )}\r\n\r\n        <button\r\n          onClick={handleSave}\r\n          className=\"w-full bg-blue-600 text-white p-2 rounded-md hover:bg-blue-700 transition-colors\"\r\n        >\r\n          Save Selection\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAUe,SAAS,oBAAoB,EAAE,MAAM,EAAE,MAAM,EAA4B;IACtF,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAY;IACtD,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,iNAAQ,EAAC;IACrC,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,iNAAQ,EAAC;IAErC,MAAM,SAAS,OAAO,IAAI,CAAC,mIAAQ,EAAE,MAAM,CAAC,CAAA,IAAK,MAAM;IAEvD,MAAM,aAAa;QACjB,IAAI,CAAC,UAAW,cAAc,OAAO,CAAC,QAAS;YAC7C,MAAM;YACN;QACF;QAEA,IAAI,cAAc,OAAO,CAAC,8IAAmB,CAAC,OAAO,EAAE,SAAS,SAAS;YACvE,MAAM;YACN;QACF;QAEA,MAAM,iBAAiB,cAAc,MAAM;YAAC;YAAQ;SAAK,GAAG;YAAC;YAAQ;YAAQ;SAAK;QAClF,OAAO;IACT;IAEA,MAAM,2BAA2B;QAC/B,OAAO,8IAAmB,CAAC,OAAO,IAAI,EAAE;IAC1C;IAEA,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAA6C;;;;;;8BAE3D,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAM,WAAU;sCAAkE;;;;;;sCAGnF,8OAAC;4BACC,OAAO;4BACP,UAAU,CAAC;gCACT,aAAa,EAAE,MAAM,CAAC,KAAK;gCAC3B,UAAU;4BACZ;4BACA,WAAU;;8CAEV,8OAAC;oCAAO,OAAM;8CAAI;;;;;;8CAClB,8OAAC;oCAAO,OAAM;8CAAI;;;;;;;;;;;;;;;;;;8BAItB,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAM,WAAU;sCAAkE;;;;;;sCAGnF,8OAAC;4BACC,OAAO;4BACP,UAAU,CAAC;gCACT,UAAU,EAAE,MAAM,CAAC,KAAK;gCACxB,UAAU;4BACZ;4BACA,WAAU;;8CAEV,8OAAC;oCAAO,OAAM;8CAAG;;;;;;gCAChB,OAAO,GAAG,CAAC,CAAA,sBACV,8OAAC;wCAAmB,OAAO;kDAAQ;uCAAtB;;;;;;;;;;;;;;;;;gBAKlB,cAAc,qBACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAM,WAAU;sCAAkE;;;;;;sCAGnF,8OAAC;4BACC,OAAO;4BACP,UAAU,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK;4BACzC,WAAU;;8CAEV,8OAAC;oCAAO,OAAM;8CAAG;;;;;;gCAChB,2BAA2B,GAAG,CAAC,CAAA,sBAC9B,8OAAC;wCAAmB,OAAO;kDAAQ;uCAAtB;;;;;;;;;;;;;;;;;8BAMrB,8OAAC;oBACC,SAAS;oBACT,WAAU;8BACX;;;;;;;;;;;;;;;;;AAMT","debugId":null}},
    {"offset": {"line": 651, "column": 0}, "map": {"version":3,"sources":["file:///C:/Study/Programming/Github%20Stuff/GATE-progress-tracker/gate-progress-tracker/app/components/ProgressChart.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  ArcElement,\r\n  Tooltip,\r\n  Legend,\r\n  Title\r\n} from 'chart.js';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend, Title);\r\n\r\ninterface ProgressChartProps {\r\n  subject: string;\r\n  progress: number;\r\n}\r\n\r\nexport default function ProgressChart({ subject, progress }: ProgressChartProps) {\r\n  const data = {\r\n    labels: ['Completed', 'Remaining'],\r\n    datasets: [{\r\n      data: [progress, 100 - progress],\r\n      backgroundColor: ['#36a2eb', '#e5e7eb'],\r\n      borderWidth: 1,\r\n      borderColor: '#fff'\r\n    }]\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    animation: {\r\n      duration: 1000,\r\n      easing: 'easeInOutQuad' as const\r\n    },\r\n    plugins: {\r\n      legend: { \r\n        position: 'top' as const, \r\n        labels: { \r\n          font: { size: 10 },\r\n          color: '#374151'\r\n        } \r\n      },\r\n      title: { \r\n        display: true, \r\n        text: `${subject} Progress`, \r\n        font: { size: 12 },\r\n        color: '#374151'\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chart-container w-48 h-32 mx-auto\">\r\n      <Doughnut data={data} options={options} />\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAGA;AACA;AAJA;;;;AAYA,qKAAO,CAAC,QAAQ,CAAC,0KAAU,EAAE,uKAAO,EAAE,sKAAM,EAAE,qKAAK;AAOpC,SAAS,cAAc,EAAE,OAAO,EAAE,QAAQ,EAAsB;IAC7E,MAAM,OAAO;QACX,QAAQ;YAAC;YAAa;SAAY;QAClC,UAAU;YAAC;gBACT,MAAM;oBAAC;oBAAU,MAAM;iBAAS;gBAChC,iBAAiB;oBAAC;oBAAW;iBAAU;gBACvC,aAAa;gBACb,aAAa;YACf;SAAE;IACJ;IAEA,MAAM,UAAU;QACd,YAAY;QACZ,qBAAqB;QACrB,WAAW;YACT,UAAU;YACV,QAAQ;QACV;QACA,SAAS;YACP,QAAQ;gBACN,UAAU;gBACV,QAAQ;oBACN,MAAM;wBAAE,MAAM;oBAAG;oBACjB,OAAO;gBACT;YACF;YACA,OAAO;gBACL,SAAS;gBACT,MAAM,GAAG,QAAQ,SAAS,CAAC;gBAC3B,MAAM;oBAAE,MAAM;gBAAG;gBACjB,OAAO;YACT;QACF;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,kKAAQ;YAAC,MAAM;YAAM,SAAS;;;;;;;;;;;AAGrC","debugId":null}},
    {"offset": {"line": 731, "column": 0}, "map": {"version":3,"sources":["file:///C:/Study/Programming/Github%20Stuff/GATE-progress-tracker/gate-progress-tracker/app/components/ProgressSummary.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React from 'react';\r\nimport ProgressChart from './ProgressChart';\r\nimport { TopicStatuses } from '../data/syllabus';\r\n\r\ninterface ProgressSummaryProps {\r\n  selectedPapers: string[];\r\n  topicStatuses: TopicStatuses;\r\n}\r\n\r\nexport default function ProgressSummary({ selectedPapers, topicStatuses }: ProgressSummaryProps) {\r\n  const calculateProgress = (subject: string) => {\r\n    if (!topicStatuses[subject]) return 0;\r\n    const totalTopics = topicStatuses[subject].length;\r\n    const completedTopics = topicStatuses[subject].filter(item => item.status === 'Completed').length;\r\n    return totalTopics > 0 ? Math.round((completedTopics / totalTopics) * 100) : 0;\r\n  };\r\n\r\n  const getSubjectColor = (subject: string, index: number) => {\r\n    if (subject === 'GA') return 'yellow';\r\n    return index === 0 ? 'blue' : 'green';\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-8\">\r\n      <h2 className=\"text-xl font-semibold mb-4 dark:text-white\">Progress Summary</h2>\r\n      \r\n      {/* Progress Cards */}\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 mb-4\">\r\n        {selectedPapers.map((subject, index) => {\r\n          const progress = calculateProgress(subject);\r\n          const colorClass = getSubjectColor(subject, index);\r\n          \r\n          return (\r\n            <div \r\n              key={subject} \r\n              className={`bg-${colorClass}-100 dark:bg-${colorClass === 'yellow' ? 'yellow-900' : colorClass === 'blue' ? 'blue-900' : 'green-900'} p-4 rounded-md`}\r\n            >\r\n              <h3 className={`font-medium text-${colorClass}-800 dark:text-${colorClass}-200`}>\r\n                {subject} Completion\r\n              </h3>\r\n              <p className={`text-lg text-${colorClass}-600 dark:text-${colorClass}-300`}>\r\n                {progress}%\r\n              </p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* Progress Charts */}\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\r\n        {selectedPapers.map((subject) => (\r\n          <ProgressChart \r\n            key={subject} \r\n            subject={subject} \r\n            progress={calculateProgress(subject)} \r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAGA;AAHA;;;AAWe,SAAS,gBAAgB,EAAE,cAAc,EAAE,aAAa,EAAwB;IAC7F,MAAM,oBAAoB,CAAC;QACzB,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,OAAO;QACpC,MAAM,cAAc,aAAa,CAAC,QAAQ,CAAC,MAAM;QACjD,MAAM,kBAAkB,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA,OAAQ,KAAK,MAAM,KAAK,aAAa,MAAM;QACjG,OAAO,cAAc,IAAI,KAAK,KAAK,CAAC,AAAC,kBAAkB,cAAe,OAAO;IAC/E;IAEA,MAAM,kBAAkB,CAAC,SAAiB;QACxC,IAAI,YAAY,MAAM,OAAO;QAC7B,OAAO,UAAU,IAAI,SAAS;IAChC;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA6C;;;;;;0BAG3D,8OAAC;gBAAI,WAAU;0BACZ,eAAe,GAAG,CAAC,CAAC,SAAS;oBAC5B,MAAM,WAAW,kBAAkB;oBACnC,MAAM,aAAa,gBAAgB,SAAS;oBAE5C,qBACE,8OAAC;wBAEC,WAAW,CAAC,GAAG,EAAE,WAAW,aAAa,EAAE,eAAe,WAAW,eAAe,eAAe,SAAS,aAAa,YAAY,eAAe,CAAC;;0CAErJ,8OAAC;gCAAG,WAAW,CAAC,iBAAiB,EAAE,WAAW,eAAe,EAAE,WAAW,IAAI,CAAC;;oCAC5E;oCAAQ;;;;;;;0CAEX,8OAAC;gCAAE,WAAW,CAAC,aAAa,EAAE,WAAW,eAAe,EAAE,WAAW,IAAI,CAAC;;oCACvE;oCAAS;;;;;;;;uBAPP;;;;;gBAWX;;;;;;0BAIF,8OAAC;gBAAI,WAAU;0BACZ,eAAe,GAAG,CAAC,CAAC,wBACnB,8OAAC,8IAAa;wBAEZ,SAAS;wBACT,UAAU,kBAAkB;uBAFvB;;;;;;;;;;;;;;;;AAQjB","debugId":null}},
    {"offset": {"line": 830, "column": 0}, "map": {"version":3,"sources":["file:///C:/Study/Programming/Github%20Stuff/GATE-progress-tracker/gate-progress-tracker/app/components/TopicManagement.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React from 'react';\r\nimport { TopicStatuses, TopicStatus, commonTopics } from '../data/syllabus';\r\n\r\ninterface TopicManagementProps {\r\n  selectedPapers: string[];\r\n  topicStatuses: TopicStatuses;\r\n  onUpdateTopicStatus: (subject: string, topic: string, status: TopicStatus['status']) => void;\r\n  onUpdateTopicDifficulty: (subject: string, topic: string, difficulty: TopicStatus['difficulty']) => void;\r\n  onUpdateTopicNotes: (subject: string, topic: string, notes: string) => void;\r\n}\r\n\r\nexport default function TopicManagement({\r\n  selectedPapers,\r\n  topicStatuses,\r\n  onUpdateTopicStatus,\r\n  onUpdateTopicDifficulty,\r\n  onUpdateTopicNotes\r\n}: TopicManagementProps) {\r\n  const getSubjectColor = (subject: string, index: number) => {\r\n    if (subject === 'GA') return 'text-yellow-600 dark:text-yellow-400';\r\n    return index === 0 ? 'text-blue-600 dark:text-blue-400' : 'text-green-600 dark:text-green-400';\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-8\">\r\n      <h2 className=\"text-xl font-semibold mb-4 dark:text-white\">Syllabus Topics</h2>\r\n      \r\n      <div className=\"space-y-6\">\r\n        {selectedPapers.map((subject, index) => (\r\n          <div key={subject}>\r\n            <h3 className={`text-lg font-medium mb-3 ${getSubjectColor(subject, index)}`}>\r\n              {subject}\r\n            </h3>\r\n            \r\n            <div className=\"overflow-x-auto\">\r\n              <div className=\"max-h-96 overflow-y-auto border rounded-lg\">\r\n                <table className=\"w-full border-collapse\">\r\n                  <thead className=\"bg-gray-200 dark:bg-gray-600 sticky top-0\">\r\n                    <tr>\r\n                      <th className=\"border p-2 text-left dark:text-white dark:border-gray-500\">Topic</th>\r\n                      <th className=\"border p-2 text-left dark:text-white dark:border-gray-500\">Tag</th>\r\n                      <th className=\"border p-2 text-left dark:text-white dark:border-gray-500\">Difficulty</th>\r\n                      <th className=\"border p-2 text-left dark:text-white dark:border-gray-500\">Status</th>\r\n                      <th className=\"border p-2 text-left dark:text-white dark:border-gray-500\">Notes</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {topicStatuses[subject]?.map((item, itemIndex) => {\r\n                      const isCommon = commonTopics.includes(item.topic);\r\n                      \r\n                      return (\r\n                        <tr key={itemIndex} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n                          <td className=\"border p-2 dark:text-white dark:border-gray-500\">\r\n                            {item.topic}\r\n                          </td>\r\n                          <td className=\"border p-2 dark:border-gray-500\">\r\n                            {isCommon && (\r\n                              <span className=\"bg-purple-200 dark:bg-purple-800 text-purple-800 dark:text-purple-200 px-2 py-1 rounded text-xs\">\r\n                                Common\r\n                              </span>\r\n                            )}\r\n                          </td>\r\n                          <td className=\"border p-2 dark:border-gray-500\">\r\n                            <select\r\n                              value={item.difficulty}\r\n                              onChange={(e) => onUpdateTopicDifficulty(subject, item.topic, e.target.value as TopicStatus['difficulty'])}\r\n                              className=\"p-1 border rounded-md w-full dark:bg-gray-600 dark:border-gray-500 dark:text-white\"\r\n                            >\r\n                              <option value=\"Easy\">Easy</option>\r\n                              <option value=\"Moderate\">Moderate</option>\r\n                              <option value=\"Hard\">Hard</option>\r\n                            </select>\r\n                          </td>\r\n                          <td className=\"border p-2 dark:border-gray-500\">\r\n                            <select\r\n                              value={item.status}\r\n                              onChange={(e) => onUpdateTopicStatus(subject, item.topic, e.target.value as TopicStatus['status'])}\r\n                              className=\"p-1 border rounded-md w-full dark:bg-gray-600 dark:border-gray-500 dark:text-white\"\r\n                            >\r\n                              <option value=\"Not Started\">Not Started</option>\r\n                              <option value=\"In Progress\">In Progress</option>\r\n                              <option value=\"Completed\">Completed</option>\r\n                            </select>\r\n                          </td>\r\n                          <td className=\"border p-2 dark:border-gray-500\">\r\n                            <textarea\r\n                              value={item.notes}\r\n                              onChange={(e) => onUpdateTopicNotes(subject, item.topic, e.target.value)}\r\n                              className=\"p-1 border rounded-md w-full resize-none dark:bg-gray-600 dark:border-gray-500 dark:text-white\"\r\n                              rows={2}\r\n                              placeholder=\"Add notes (e.g., resources, doubts)\"\r\n                            />\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAGA;AAHA;;;AAae,SAAS,gBAAgB,EACtC,cAAc,EACd,aAAa,EACb,mBAAmB,EACnB,uBAAuB,EACvB,kBAAkB,EACG;IACrB,MAAM,kBAAkB,CAAC,SAAiB;QACxC,IAAI,YAAY,MAAM,OAAO;QAC7B,OAAO,UAAU,IAAI,qCAAqC;IAC5D;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA6C;;;;;;0BAE3D,8OAAC;gBAAI,WAAU;0BACZ,eAAe,GAAG,CAAC,CAAC,SAAS,sBAC5B,8OAAC;;0CACC,8OAAC;gCAAG,WAAW,CAAC,yBAAyB,EAAE,gBAAgB,SAAS,QAAQ;0CACzE;;;;;;0CAGH,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAM,WAAU;;0DACf,8OAAC;gDAAM,WAAU;0DACf,cAAA,8OAAC;;sEACC,8OAAC;4DAAG,WAAU;sEAA4D;;;;;;sEAC1E,8OAAC;4DAAG,WAAU;sEAA4D;;;;;;sEAC1E,8OAAC;4DAAG,WAAU;sEAA4D;;;;;;sEAC1E,8OAAC;4DAAG,WAAU;sEAA4D;;;;;;sEAC1E,8OAAC;4DAAG,WAAU;sEAA4D;;;;;;;;;;;;;;;;;0DAG9E,8OAAC;0DACE,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM;oDAClC,MAAM,WAAW,uIAAY,CAAC,QAAQ,CAAC,KAAK,KAAK;oDAEjD,qBACE,8OAAC;wDAAmB,WAAU;;0EAC5B,8OAAC;gEAAG,WAAU;0EACX,KAAK,KAAK;;;;;;0EAEb,8OAAC;gEAAG,WAAU;0EACX,0BACC,8OAAC;oEAAK,WAAU;8EAAkG;;;;;;;;;;;0EAKtH,8OAAC;gEAAG,WAAU;0EACZ,cAAA,8OAAC;oEACC,OAAO,KAAK,UAAU;oEACtB,UAAU,CAAC,IAAM,wBAAwB,SAAS,KAAK,KAAK,EAAE,EAAE,MAAM,CAAC,KAAK;oEAC5E,WAAU;;sFAEV,8OAAC;4EAAO,OAAM;sFAAO;;;;;;sFACrB,8OAAC;4EAAO,OAAM;sFAAW;;;;;;sFACzB,8OAAC;4EAAO,OAAM;sFAAO;;;;;;;;;;;;;;;;;0EAGzB,8OAAC;gEAAG,WAAU;0EACZ,cAAA,8OAAC;oEACC,OAAO,KAAK,MAAM;oEAClB,UAAU,CAAC,IAAM,oBAAoB,SAAS,KAAK,KAAK,EAAE,EAAE,MAAM,CAAC,KAAK;oEACxE,WAAU;;sFAEV,8OAAC;4EAAO,OAAM;sFAAc;;;;;;sFAC5B,8OAAC;4EAAO,OAAM;sFAAc;;;;;;sFAC5B,8OAAC;4EAAO,OAAM;sFAAY;;;;;;;;;;;;;;;;;0EAG9B,8OAAC;gEAAG,WAAU;0EACZ,cAAA,8OAAC;oEACC,OAAO,KAAK,KAAK;oEACjB,UAAU,CAAC,IAAM,mBAAmB,SAAS,KAAK,KAAK,EAAE,EAAE,MAAM,CAAC,KAAK;oEACvE,WAAU;oEACV,MAAM;oEACN,aAAY;;;;;;;;;;;;uDAvCT;;;;;gDA4Cb;;;;;;;;;;;;;;;;;;;;;;;uBAlEA;;;;;;;;;;;;;;;;AA4EpB","debugId":null}},
    {"offset": {"line": 1110, "column": 0}, "map": {"version":3,"sources":["file:///C:/Study/Programming/Github%20Stuff/GATE-progress-tracker/gate-progress-tracker/app/components/TaskManagement.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState } from 'react';\r\nimport { Task } from '../data/syllabus';\r\n\r\ninterface TaskManagementProps {\r\n  selectedPapers: string[];\r\n  tasks: Task[];\r\n  onAddTask: (task: Omit<Task, 'id'>) => void;\r\n  onDeleteTask: (id: number) => void;\r\n}\r\n\r\nexport default function TaskManagement({ selectedPapers, tasks, onAddTask, onDeleteTask }: TaskManagementProps) {\r\n  const [taskDate, setTaskDate] = useState(() => new Date().toISOString().split('T')[0]);\r\n  const [subject, setSubject] = useState(selectedPapers[0] || '');\r\n  const [topic, setTopic] = useState('');\r\n  const [status, setStatus] = useState<Task['status']>('Not Started');\r\n  const [notes, setNotes] = useState('');\r\n\r\n  React.useEffect(() => {\r\n    if (selectedPapers.length > 0 && !subject) {\r\n      setSubject(selectedPapers[0]);\r\n    }\r\n  }, [selectedPapers, subject]);\r\n\r\n  const handleAddTask = () => {\r\n    if (!taskDate || !topic || !subject) {\r\n      alert('Please fill in Date, Subject, and Topic.');\r\n      return;\r\n    }\r\n\r\n    const task: Omit<Task, 'id'> = {\r\n      date: taskDate,\r\n      subject,\r\n      topic,\r\n      status,\r\n      notes\r\n    };\r\n\r\n    onAddTask(task);\r\n    \r\n    // Reset form\r\n    setTaskDate(new Date().toISOString().split('T')[0]);\r\n    setSubject(selectedPapers[0] || '');\r\n    setTopic('');\r\n    setStatus('Not Started');\r\n    setNotes('');\r\n    \r\n    alert('Task added successfully!');\r\n  };\r\n\r\n  const sortedTasks = [...tasks].sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {/* Task Input Form */}\r\n      <div>\r\n        <h2 className=\"text-xl font-semibold mb-4 dark:text-white\">Add Daily Task/Notes</h2>\r\n        <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              Date\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              value={taskDate}\r\n              onChange={(e) => setTaskDate(e.target.value)}\r\n              className=\"w-full p-2 border rounded-md dark:bg-gray-600 dark:border-gray-500 dark:text-white\"\r\n            />\r\n          </div>\r\n          \r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              Subject\r\n            </label>\r\n            <select\r\n              value={subject}\r\n              onChange={(e) => setSubject(e.target.value)}\r\n              className=\"w-full p-2 border rounded-md dark:bg-gray-600 dark:border-gray-500 dark:text-white\"\r\n            >\r\n              {selectedPapers.map(paper => (\r\n                <option key={paper} value={paper}>{paper}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          \r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              Topic\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={topic}\r\n              onChange={(e) => setTopic(e.target.value)}\r\n              className=\"w-full p-2 border rounded-md dark:bg-gray-600 dark:border-gray-500 dark:text-white\"\r\n              placeholder=\"e.g., Linear Algebra, Python\"\r\n            />\r\n          </div>\r\n          \r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              Completion Status\r\n            </label>\r\n            <select\r\n              value={status}\r\n              onChange={(e) => setStatus(e.target.value as Task['status'])}\r\n              className=\"w-full p-2 border rounded-md dark:bg-gray-600 dark:border-gray-500 dark:text-white\"\r\n            >\r\n              <option value=\"Not Started\">Not Started</option>\r\n              <option value=\"In Progress\">In Progress</option>\r\n              <option value=\"Completed\">Completed</option>\r\n            </select>\r\n          </div>\r\n          \r\n          <div className=\"sm:col-span-2\">\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              Notes\r\n            </label>\r\n            <textarea\r\n              value={notes}\r\n              onChange={(e) => setNotes(e.target.value)}\r\n              className=\"w-full p-2 border rounded-md resize-none dark:bg-gray-600 dark:border-gray-500 dark:text-white\"\r\n              rows={4}\r\n              placeholder=\"e.g., Struggled with FFT, need to revise\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"sm:col-span-2\">\r\n            <button\r\n              onClick={handleAddTask}\r\n              className=\"w-full bg-blue-600 text-white p-2 rounded-md hover:bg-blue-700 transition-colors\"\r\n            >\r\n              Add Task\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Task History */}\r\n      <div>\r\n        <h2 className=\"text-xl font-semibold mb-4 dark:text-white\">Task History</h2>\r\n        <div className=\"max-h-96 overflow-y-auto border rounded-lg\">\r\n          <table className=\"w-full border-collapse\">\r\n            <thead className=\"bg-gray-200 dark:bg-gray-600 sticky top-0\">\r\n              <tr>\r\n                <th className=\"border p-2 text-left dark:text-white dark:border-gray-500\">Date</th>\r\n                <th className=\"border p-2 text-left dark:text-white dark:border-gray-500\">Subject</th>\r\n                <th className=\"border p-2 text-left dark:text-white dark:border-gray-500\">Topic</th>\r\n                <th className=\"border p-2 text-left dark:text-white dark:border-gray-500\">Status</th>\r\n                <th className=\"border p-2 text-left dark:text-white dark:border-gray-500\">Notes</th>\r\n                <th className=\"border p-2 text-left dark:text-white dark:border-gray-500\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {sortedTasks.map((task) => (\r\n                <tr key={task.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n                  <td className=\"border p-2 dark:text-white dark:border-gray-500\">{task.date}</td>\r\n                  <td className=\"border p-2 dark:text-white dark:border-gray-500\">{task.subject}</td>\r\n                  <td className=\"border p-2 dark:text-white dark:border-gray-500\">{task.topic}</td>\r\n                  <td className=\"border p-2 dark:text-white dark:border-gray-500\">{task.status}</td>\r\n                  <td className=\"border p-2 dark:text-white dark:border-gray-500\">{task.notes}</td>\r\n                  <td className=\"border p-2 dark:border-gray-500\">\r\n                    <button\r\n                      onClick={() => onDeleteTask(task.id)}\r\n                      className=\"text-red-600 dark:text-red-400 hover:underline\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n              {sortedTasks.length === 0 && (\r\n                <tr>\r\n                  <td colSpan={6} className=\"border p-4 text-center text-gray-500 dark:text-gray-400 dark:border-gray-500\">\r\n                    No tasks added yet. Add your first task above!\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1560, "column": 0}, "map": {"version":3,"sources":["file:///C:/Study/Programming/Github%20Stuff/GATE-progress-tracker/gate-progress-tracker/app/hooks/useLocalStorage.ts"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\n\r\nexport function useLocalStorage<T>(key: string, initialValue: T) {\r\n  const [storedValue, setStoredValue] = useState<T>(() => {\r\n    if (typeof window === 'undefined') {\r\n      return initialValue;\r\n    }\r\n    try {\r\n      const item = window.localStorage.getItem(key);\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      console.error(`Error reading localStorage key \"${key}\":`, error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  const setValue = (value: T | ((val: T) => T)) => {\r\n    try {\r\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\r\n      setStoredValue(valueToStore);\r\n      if (typeof window !== 'undefined') {\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error setting localStorage key \"${key}\":`, error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue] as const;\r\n}"],"names":[],"mappings":";;;;AAEA;AAFA;;AAIO,SAAS,gBAAmB,GAAW,EAAE,YAAe;IAC7D,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iNAAQ,EAAI;QAChD,wCAAmC;YACjC,OAAO;QACT;;;IAQF;IAEA,MAAM,WAAW,CAAC;QAChB,IAAI;YACF,MAAM,eAAe,iBAAiB,WAAW,MAAM,eAAe;YACtE,eAAe;YACf;;QAGF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,gCAAgC,EAAE,IAAI,EAAE,CAAC,EAAE;QAC5D;IACF;IAEA,OAAO;QAAC;QAAa;KAAS;AAChC","debugId":null}},
    {"offset": {"line": 1594, "column": 0}, "map": {"version":3,"sources":["file:///C:/Study/Programming/Github%20Stuff/GATE-progress-tracker/gate-progress-tracker/app/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport PaperSelectionModal from './components/PaperSelectionModal';\nimport ProgressSummary from './components/ProgressSummary';\nimport TopicManagement from './components/TopicManagement';\nimport TaskManagement from './components/TaskManagement';\nimport { useLocalStorage } from './hooks/useLocalStorage';\nimport { syllabus, TopicStatuses, TopicStatus, Task } from './data/syllabus';\n\nexport default function Home() {\n  const [selectedPapers, setSelectedPapers] = useLocalStorage<string[]>('selectedPapers', []);\n  const [topicStatuses, setTopicStatuses] = useLocalStorage<TopicStatuses>('gateTopicStatuses', {});\n  const [tasks, setTasks] = useLocalStorage<Task[]>('gateTasks', []);\n  const [isDarkMode, setIsDarkMode] = useLocalStorage<boolean>('darkMode', false);\n  const [showPaperModal, setShowPaperModal] = useState(false);\n\n  // Initialize topic statuses when papers are selected\n  useEffect(() => {\n    if (selectedPapers.length > 0) {\n      const newTopicStatuses = { ...topicStatuses };\n      let hasChanges = false;\n\n      selectedPapers.forEach(paper => {\n        if (!newTopicStatuses[paper] && syllabus[paper]) {\n          newTopicStatuses[paper] = syllabus[paper].map((topic: string) => ({\n            topic,\n            status: 'Not Started' as const,\n            difficulty: 'Moderate' as const,\n            notes: ''\n          }));\n          hasChanges = true;\n        }\n      });\n\n      if (hasChanges) {\n        setTopicStatuses(newTopicStatuses);\n      }\n    }\n  }, [selectedPapers, topicStatuses, setTopicStatuses]);\n\n  // Show paper selection modal if no papers are selected\n  useEffect(() => {\n    setShowPaperModal(selectedPapers.length === 0);\n  }, [selectedPapers]);\n\n  // Apply dark mode\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      document.documentElement.classList.toggle('dark', isDarkMode);\n    }\n  }, [isDarkMode]);\n\n  const handlePaperSelection = (papers: string[]) => {\n    setSelectedPapers(papers);\n    setShowPaperModal(false);\n  };\n\n  const handleUpdateTopicStatus = (subject: string, topic: string, status: TopicStatus['status']) => {\n    setTopicStatuses(prev => ({\n      ...prev,\n      [subject]: prev[subject].map(item =>\n        item.topic === topic ? { ...item, status } : item\n      )\n    }));\n  };\n\n  const handleUpdateTopicDifficulty = (subject: string, topic: string, difficulty: TopicStatus['difficulty']) => {\n    setTopicStatuses(prev => ({\n      ...prev,\n      [subject]: prev[subject].map(item =>\n        item.topic === topic ? { ...item, difficulty } : item\n      )\n    }));\n  };\n\n  const handleUpdateTopicNotes = (subject: string, topic: string, notes: string) => {\n    setTopicStatuses(prev => ({\n      ...prev,\n      [subject]: prev[subject].map(item =>\n        item.topic === topic ? { ...item, notes } : item\n      )\n    }));\n  };\n\n  const handleAddTask = (task: Omit<Task, 'id'>) => {\n    const newTask: Task = {\n      ...task,\n      id: Date.now()\n    };\n    setTasks(prev => [...prev, newTask]);\n  };\n\n  const handleDeleteTask = (id: number) => {\n    setTasks(prev => prev.filter(task => task.id !== id));\n  };\n\n  const handleReset = () => {\n    if (confirm('Are you sure you want to reset all data?')) {\n      if (confirm('This will reset all statuses, difficulties, notes, tasks, paper selection, and dark mode settings. Proceed?')) {\n        setSelectedPapers([]);\n        setTopicStatuses({});\n        setTasks([]);\n        setIsDarkMode(false);\n        setShowPaperModal(true);\n      }\n    }\n  };\n\n  const getTitle = () => {\n    if (selectedPapers.length === 0) return 'GATE 2026 Progress Tracker';\n    const paperText = selectedPapers.filter(p => p !== 'GA').join(' & ');\n    return `GATE 2026 Progress Tracker (${paperText})`;\n  };\n\n  return (\n    <div className=\"bg-gray-100 dark:bg-gray-900 min-h-screen flex flex-col items-center p-4\">\n      <PaperSelectionModal \n        isOpen={showPaperModal} \n        onSave={handlePaperSelection} \n      />\n\n      <div className=\"w-full max-w-5xl bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6\">\n        {/* Header */}\n        <div className=\"flex flex-col sm:flex-row justify-between items-center mb-6 gap-4\">\n          <h1 className=\"text-2xl sm:text-3xl font-bold text-blue-600 dark:text-blue-400\">\n            {getTitle()}\n          </h1>\n          <div className=\"flex flex-col sm:flex-row items-center space-y-2 sm:space-y-0 sm:space-x-4\">\n            <button\n              onClick={() => setIsDarkMode(!isDarkMode)}\n              className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors w-full sm:w-auto\"\n            >\n              {isDarkMode ? 'Disable Night Mode' : 'Enable Night Mode'}\n            </button>\n            <button\n              onClick={handleReset}\n              className=\"bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 transition-colors w-full sm:w-auto\"\n            >\n              Reset All Data\n            </button>\n          </div>\n        </div>\n\n        {selectedPapers.length > 0 && (\n          <>\n            <ProgressSummary \n              selectedPapers={selectedPapers} \n              topicStatuses={topicStatuses} \n            />\n\n            <TopicManagement\n              selectedPapers={selectedPapers}\n              topicStatuses={topicStatuses}\n              onUpdateTopicStatus={handleUpdateTopicStatus}\n              onUpdateTopicDifficulty={handleUpdateTopicDifficulty}\n              onUpdateTopicNotes={handleUpdateTopicNotes}\n            />\n\n            <TaskManagement\n              selectedPapers={selectedPapers}\n              tasks={tasks}\n              onAddTask={handleAddTask}\n              onDeleteTask={handleDeleteTask}\n            />\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}